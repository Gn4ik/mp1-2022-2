#pragma once
#include <stdio.h>
#include <locale.h>

//список продуктов
typedef struct product {
	char code[4];
	char name[50];
	float cost;
	short count;
	float price;
};// Products;
//Products P[50];
struct product P[] = {
	"0401","Бекон варенокопченый 500гр",449.90,0,0,
	"0402","Бекон сырокопченый 500гр",429.90,0,0,
	"0411","Колбаса сырокопченая 1кг",389.90,0,0,
	"0501","Рис бурый 1кг",499.90,0,0,
	"0502","Рис круглозерный 1кг",105.10,0,0,
	"0503","Рис длиннозерный 1кг",114.50,0,0,
	"0504","Рис пропаренный 1кг",130.0,0,0,
	"0510","Картофель \"Деревенский\" 1кг",18.90,0,0,
	"0511","Картофель очищенный 1кг",45.90,0,0,
	"0512","Картофель для жарки 1кг",37.90,0,0,
};
/*struct product P[2] = {"0402","Бекон сырокопченый 500гр",429.90,0,0};
struct product P[3] = {"0501","Рис бурый 100гр",499.90,0,0};
struct product P[4] = {"0502","Рис круглозерный 100гр",105.10,0,0};
struct product P[5] = {"0503","Рис длиннозерный 100гр",114.50,0,0};
struct product P[6] = {"0504","Рис пропаренный 100гр",130.0,0,0};
struct product P[7] = {"0510","Картофель \"Деревенский\" 1кг",18.90,0,0};
struct product P[8] = {"0511","Картофель очищенный 1кг",45.90,0,0};
struct product P[9] = { "0512","Картофель для жарки 1кг",37.90,0,0};
struct product P[10] = {"0411","Колбаса сырокопченая 1кг",389.90,0,0};
struct product P[11] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[12] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[13] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[14] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[15] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[16] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[17] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[18] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[19] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[20] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[21] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[22] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[23] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[24] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[25] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[26] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[27] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[28] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[29] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[30] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[31] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[32] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[33] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[34] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[35] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[36] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[37] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[38] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[39] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[40] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[41] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[42] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[43] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[44] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[45] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[46] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[47] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[48] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[49] = {"0401","Бекон варенокопченный 500гр",450,0,0};
struct product P[49] = {"0401","Бекон варенокопченный 500гр",450,0,0};*/

//инструктирование
void ShowHelp(new)
{
	if (new == 1) {
		printf("\t\t\tДобро пожаловать в онлайн-кассу!\n");
		printf("\tПеред началом работы, пожалуйста, ознакомьтесь с инструкцией.\n");
		system("pause");
	}
}

//формирование чека
void showCheque(float summ) {
	system("cls");
	int num = 1,discount;
	float SalePrice;
	printf("   Товар\t\t\t\tКоличество\t   Цена\t\t    Стоимость(без скидки)\t\t    Стоимость(со скидкой)\n");
	for (int i = 0; i < 50; i++) {
		if (P[i].count > 0) {
			discount = 5 * (P[i].count - 1);
			if (P[i].count > 11)
				discount = 50;
			SalePrice = (P[i].price/100)*(100-discount);
			printf("%s\n", P[i].code);
			//printf("%d) %s \t\t*%d шт. \t\t %.2f руб/шт\t\t %.2f руб.\t\t %.2f руб.\n",num,P[i].name,P[i].count,P[i].cost,P[i].price,SalePrice);
			summ = summ + SalePrice;
			num++;
		}
	}
	//printf("Итого: %.2f рублей\n", summ);
}

//внос продукции
void GiveInfo() {
	system("cls");
}